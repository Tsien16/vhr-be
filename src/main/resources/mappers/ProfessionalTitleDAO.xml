<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tsien.vhr.dao.ProfessionalTitleDAO">
  <resultMap id="BaseResultMap" type="com.tsien.vhr.model.ProfessionalTitle">
    <!--@mbg.generated-->
    <!--@Table professional_title-->
    <id column="professional_title_id" jdbcType="BIGINT" property="professionalTitleId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="level" jdbcType="OTHER" property="level" />
    <result column="is_deleted" jdbcType="BOOLEAN" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    professional_title_id, `name`, `level`, is_deleted, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from professional_title
    where professional_title_id = #{professionalTitleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from professional_title
    where professional_title_id = #{professionalTitleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="professional_title_id" keyProperty="professionalTitleId" parameterType="com.tsien.vhr.model.ProfessionalTitle" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into professional_title (`name`, `level`, is_deleted, 
      create_time, update_time)
    values (#{name,jdbcType=VARCHAR}, #{level,jdbcType=OTHER}, #{isDeleted,jdbcType=BOOLEAN}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="professional_title_id" keyProperty="professionalTitleId" parameterType="com.tsien.vhr.model.ProfessionalTitle" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into professional_title
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null and name != ''">
        `name`,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null and name != ''">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=OTHER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tsien.vhr.model.ProfessionalTitle">
    <!--@mbg.generated-->
    update professional_title
    <set>
      <if test="name != null and name != ''">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=OTHER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BOOLEAN},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where professional_title_id = #{professionalTitleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tsien.vhr.model.ProfessionalTitle">
    <!--@mbg.generated-->
    update professional_title
    set `name` = #{name,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=OTHER},
      is_deleted = #{isDeleted,jdbcType=BOOLEAN},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where professional_title_id = #{professionalTitleId,jdbcType=BIGINT}
  </update>
</mapper>